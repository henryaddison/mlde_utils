#! /usr/bin/env bash

eval "$(conda shell.bash hook)"

conda activate cuda-downscaling

set -euo pipefail

mass_host="mass-cli.jasmin.ac.uk"
sci_host="sci2.jasmin.ac.uk"
xfer_host="xfer1.jasmin.ac.uk"

collection="land-cpm"
unscaled_variable_resolution="2.2km"
data_variable="vorticity850"
variable_config_name="cpm-${data_variable}"
domain="london"
frequency="day"
src_vars=(xwind ywind)
target_sfs=(1 2 4 8)
variable_sfs=(gcm)

set -x

for year in $@; do

  let "start_year=year-1"

  # Extract (source data from moose to nc format)
  for src_variable in ${src_vars[@]}; do
    mlde moose extract --variable  ${src_variable} --year ${year} --collection ${collection}

    mlde moose convert --variable ${src_variable} --year ${year} --collection ${collection}
  done;

  # Transform (into vorticity on sci JASMIN)

  for target_sf in ${target_sfs[@]}; do
    if [ $target_sf -eq 1 ]; then
      target_resolution="2.2km"
    else
      target_resolution="2.2km-coarsened-${target_sf}x"
    fi
    for variable_sf in ${variable_sfs[@]}; do
      if [ $variable_sf == "gcm" ]; then
        variable_resolution="${unscaled_variable_resolution}-coarsened-gcm"
      elif [ $variable_sf -eq 1 ]; then
        variable_resolution=${unscaled_variable_resolution}
      else
        variable_resolution="${unscaled_variable_resolution}-coarsened-${variable_sf}x"
      fi

      resolution="${variable_resolution}-${target_resolution}"

      mlde moose create-variable --variable ${variable_config_name} --year ${year} --scale-factor ${variable_sf} --domain ${domain} --target-resolution ${target_resolution}

      # Load (vorticity onto BP storage)
      filename="${data_variable}_rcp85_${collection}_${domain}_${resolution}_01_${frequency}_${start_year}1201-${year}1130.nc"
      config_filename="${variable_config_name}-${year}.yml"
      file_subdirpath="${domain}/${resolution}/rcp85/01/${data_variable}/${frequency}"
      jasmin_dirpath="/home/users/vf20964/derived_data/moose/${file_subdirpath}"
      bp_dirpath="/user/work/vf20964/moose/${file_subdirpath}"

      LANG=C ssh -a -o ServerAliveInterval=60 ${xfer_host} code/ml-downscaling-emulation/moose-etl/xfer-script "${jasmin_dirpath}/${filename}" "${bp_dirpath}/${filename}"
      # including the variable config
      LANG=C ssh -a -o ServerAliveInterval=60 ${xfer_host} code/ml-downscaling-emulation/moose-etl/xfer-script "${jasmin_dirpath}/${config_filename}" "${bp_dirpath}/${config_filename}"
      # Cleanup files copied to BP
      rm "${jasmin_dirpath}/${filename}"
      rm "${jasmin_dirpath}/${config_filename}"
    done;
  done;

  # Clean up (x and y wind components downloaded from moose)
  for src_variable in ${src_vars[@]}; do
    mlde moose clean --variable ${src_variable} --year ${year} --collection ${collection}
  done

  sleep 5
done
