#! /usr/bin/env bash

eval "$(conda shell.bash hook)"

conda activate downscaling

set -euo pipefail

mass_host="mass-cli.jasmin.ac.uk"
sci_host="sci2.jasmin.ac.uk"
xfer_host="xfer1.jasmin.ac.uk"

year=$1

collection="land-cpm"
variable="vorticity850"
domain="london"
frequency="day"
let "start_year=year-1"

set -x

# Extract (x and y wind components from moose to nc format)
for src_variable in xwind ywind; do
  # LANG=C ssh -a -o ServerAliveInterval=60 ${mass_host} code/ml-downscaling-emulation/moose-etl/extract-script ${src_variable} ${year} ${collection}
  # ./extract-script ${src_variable} ${year} ${collection}
  mlde moose extract --variable  ${src_variable} --year ${year} --collection ${collection}

  mlde moose convert --variable ${src_variable} --year ${year} --collection ${collection}
done;

# Transform (into vorticity on sci JASMIN)
for target_sf in 1 2 4 8; do
  if [ $target_sf -eq 1 ]; then
    target_resolution="2.2km"
  else
    target_resolution="2.2km-coarsened-${target_sf}x"
  fi
  for variable_sf in gcm; do
    if [ $variable_sf -eq 1 ]; then
      variable_resolution="2.2km"
    else
      variable_resolution="2.2km-coarsened-${variable_sf}x"
    fi

    resolution="${variable_resolution}-${target_resolution}"

    mlde moose create-variable --variable ${variable} --year ${year} --scale-factor ${variable_sf} --domain ${domain} --target-resolution ${target_resolution}

    filename="${variable}_rcp85_${collection}_${domain}_${resolution}_01_${frequency}_${start_year}1201-${year}1130.nc"
    file_subpath="${domain}/${resolution}/rcp85/01/${variable}/${frequency}/${filename}"
    jasmin_filepath="/home/users/vf20964/derived_data/moose/${file_subpath}"
    bp_filepath="/user/work/vf20964/moose/${file_subpath}"

    # Load (vorticity onto BP storage)
    LANG=C ssh -a -o ServerAliveInterval=60 ${xfer_host} code/ml-downscaling-emulation/moose-etl/xfer-script ${jasmin_filepath} ${bp_filepath}
    # Cleanup file copied to BP
    rm ${jasmin_filepath}
  done
done;

# Clean up (x and y wind components downloaded from moose)
for src_variable in xwind ywind; do
  mlde moose clean --variable ${src_variable} --year ${year} --collection ${collection}
done
